{
  description = "Nix flake for installation of debugger binary ninja.";

  inputs = {



  };
  outputs = { self, nixpkgs, ... }:
  let 
    pkgs = nixpkgs.legacyPackages.x86_64-linux;
    runScriptPrefix = {errorOut ? true}: ''
      # Needed for simulink even on wayland systems
      export QT_QPA_PLATFORM=xcb
      # Search for an imperative declaration of the installation directory of binaryninja
      if [[ -f ~/.config/binaryninja/nix.sh ]]; then
        source ~/.config/binarninja/nix.sh
    '' + pkgs.lib.optionalString errorOut ''else
        echo "nix-binaryninja-error: Did not find ~/.config/binaryninja/nix.sh" >&2
        exit 1
      fi
      if [[ ! -d "$INSTALL_DIR" ]]; then
        echo "nix-binaryninja-error: INSTALL_DIR $INSTALL_DIR isn't a directory" >&2
        exit 2
    '' + ''
      fi
    '';
    desktopItem = pkgs.makeDesktopItem {
    desktopName = "Binary Ninja";
    name = "matlab";
    # We use substituteInPlace after we run `install`
    # -desktop is needed, see:
    # https://www.mathworks.com/matlabcentral/answers/20-how-do-i-make-a-desktop-launcher-for-matlab-in-linux#answer_25
    exec = "@out@/bin/binaryninja %u";
    icon = "binaryninja";
    # Most of the following are copied from octave's desktop launcher
    categories = [
      "Utility"
      "TextEditor"
      "Development"
      "IDE"
    ];
    mimeTypes = [
      "text/x-octave"
      "text/x-matlab"
    ];
    keywords = [
      "science"
      "math"
      "matrix"
      "numerical computation"
      "plotting"
    ];
  };



}
